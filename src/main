#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Mon Nov 27 14:13:21 2017

@author: yafei
"""
# import other function modules
import argparse
import torch
torch.manual_seed(1)
import datetime
import cPickle as pickle
import pdb


#Build a argument parser: argparser
argparser = argparse.ArgumentParser(description="Neural network for QA")
argparser.add_argument("--corpus",
        type = str
    )
argparser.add_argument("--train",
        type = str,
        default = ""
    )
argparser.add_argument("--test",
        type = str,
        default = ""
    )
argparser.add_argument("--dev",
        type = str,
        default = ""
    )
argparser.add_argument("--embeddings",
        type = str,
        default = ""
    )
argparser.add_argument("--hidden_dim", "-d",
        type = int,
        default = 200
    )
argparser.add_argument("--learning",
        type = str,
        default = "adam"
    )
argparser.add_argument("--learning_rate",
        type = float,
        default = 0.001
    )
argparser.add_argument("--l2_reg",
        type = float,
        default = 1e-5
    )
argparser.add_argument("--activation", "-act",
        type = str,
        default = "tanh"
    )
argparser.add_argument("--batch_size",
        type = int,
        default = 40
    )
argparser.add_argument("--depth",
        type = int,
        default = 1
    )
argparser.add_argument("--dropout",
        type = float,
        default = 0.0
    )
argparser.add_argument("--max_epoch",
        type = int,
        default = 50
    )
argparser.add_argument("--cut_off",
        type = int,
        default = 1
    )
argparser.add_argument("--max_seq_len",
        type = int,
        default = 100
    )
argparser.add_argument("--normalize",
        type = int,
        default = 1
    )
argparser.add_argument("--reweight",
        type = int,
        default = 1
    )
argparser.add_argument("--order",
        type = int,
        default = 2
    )
argparser.add_argument("--model_name",
        type = str,
        default = "lstm"
    )
argparser.add_argument("--mode",
        type = int,
        default = 1
    )
argparser.add_argument("--outgate",
        type = int,
        default = 0
    )
argparser.add_argument("--load_pretrain",
        type = str,
        default = ""
    )
argparser.add_argument("--average",
        type = int,
        default = 0
    )
argparser.add_argument("--save_model",
        type = str,
        default = ""
    )

args = argparser.parse_args()
print args
print ""



